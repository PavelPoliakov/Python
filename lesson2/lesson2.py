# Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных
# каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.
my_list = [214, 'Word', None, 78.85, True, ('A', 'B')]
for i in range(len(my_list)):
    print(type(my_list[i]))

# Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами
# 0 и 1, 2 и 3 и т. д. При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка
# элементов нужно использовать функцию input().
your_string = input('Заполните ваш список элементов через пробел:')
your_list = list(your_string.split(' '))
print(your_list)
for i in range(len(your_list)):
    if i % 2 == 0 and i != len(your_list) - 1:
        your_list[i], your_list[i + 1] = your_list[i + 1], your_list[i]
print(your_list)

# Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и dict.
seasons_list = ['зима', 'весна', 'лето', 'осень']
mon = int(input('Введите месяц числом от 1 до 12:'))
while mon < 1 or mon > 12:
    print('Вы ввели неверное число. Попробуйте еще раз.')
    mon = int(input('Введите месяц числом от 1 до 12:'))
if 1 <= mon < 3 or mon == 12:
    print(seasons_list[0])
elif 3 <= mon < 6:
    print(seasons_list[1])
elif 6 <= mon < 9:
    print(seasons_list[2])
else:
    print(seasons_list[3])
# вариант 2:
seasons_dict = {'1': 'зима', '2': 'зима', '3': 'весна', '4': 'весна', '5': 'весна', '6': 'лето', '7': 'лето',
                '8': 'лето', '9': 'осень', '10': 'осень', '11': 'осень', '12': 'зима'}
mon1 = input('Введите месяц числом от 1 до 12:')
while int(mon1) < 1 or int(mon1) > 12:
    print('Вы ввели неверное число. Попробуйте еще раз.')
    mon1 = input('Введите месяц числом от 1 до 12:')
print(f'Это {seasons_dict.get(mon1)}')

# Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.
your_string = input('Введите слова через пробел:')
your_list_from_your_string = your_string.split(' ')
for ind, el in enumerate(your_list_from_your_string, 1):
    print(ind, el[:10])

# Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У пользователя
# нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
my_list1 = [124, 118, 107, 99, 99, 85, 82, 80, 79, 79, 79, 62]
num = int(input('Введите новый элемент рейтинга:'))
if num > my_list1[0]:
    my_list1.insert(0, num)
elif num < my_list1[-1]:
    my_list1.append(num)
elif num in my_list1:
    my_list1.reverse()
    my_list1.insert(my_list1.index(num), num)
    my_list1.reverse()
else:
    for i in range(len(my_list1)):
        if num > my_list1[i]:
            my_list1.insert(i, num)
            break
print(my_list1)

# *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию
# об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами,
# то есть характеристиками товара: название, цена, количество, единица измерения.
# Структуру нужно сформировать программно, запросив все данные у пользователя.
# Пример готовой структуры:
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например, название. Тогда значение — список значений-характеристик, например, список названий товаров.
# Пример:
# {
#     “название”: [“компьютер”, “принтер”, “сканер”],
#     “цена”: [20000, 6000, 2000],
#     “количество”: [5, 2, 7],
#     “ед”: [“шт.”]
# }
goods = []
title = []
price = []
number = []
unit = ['шт.']
i = int(input('Введите количество позиций товаров:'))
for i in range(1, i + 1):
    my_tuple = (i, {'название': input('Введите название товара:'), 'цена': input('Введите цену указанного товара:'),
                    'количество': int(input('Введите количество указанного товара:')), 'ед': 'шт.'})
    goods.append(my_tuple)
    title.append(my_tuple[1].get('название'))
    price.append(my_tuple[1].get('цена'))
    number.append(my_tuple[1].get('количество'))
print(goods)
analitic = {'название': title, 'цена': price, 'количество': number, 'ед': unit}
print(analitic)
